# MCP管理平台前端功能需求文档

## 1. 概述

MCP管理平台是一个用于管理、监控和使用MCP(Model Control Protocol)服务的Web界面。该平台提供了创建MCP服务、实例管理、聊天功能和监控等功能。

## 2. 核心功能模块

### 2.1 会话管理
- 创建新会话
- 显示当前会话ID
- 支持会话恢复

### 2.2 MCP服务管理
- 添加新的MCP服务
  - 预设服务快速添加(高德地图、Stripe、OpenAI等)
  - 手动配置服务信息
  - 通过命令行配置
  - 直接粘贴JSON配置
  - 导入配置文件
- 查看已连接的MCP服务列表
- 重新连接服务
- 删除服务
- 调用服务工具

### 2.3 聊天功能
- 基于OpenAI的聊天界面
- 发送和接收消息
- 显示系统消息
- 清除聊天记录
- 支持显示函数调用信息

### 2.4 Function Call测试
- 向OpenAI发送测试消息
- 显示函数调用结果
- 清除测试结果

### 2.5 服务池监控
- 显示池状态概览(总实例数、活跃实例、空闲实例)
- 查看实例列表详情
- 实例复用测试
- 清理空闲实例
- 刷新状态

### 2.6 Python MCP服务创建
- 配置Python MCP服务器信息
- 选择Python和Pip命令或路径
- 显示配置预览
- 创建Python MCP服务

### 2.7 Git仓库MCP服务创建
- 配置Git仓库MCP服务信息
- 支持私有仓库Token
- 选择脚本类型
- 显示配置预览
- 创建Git MCP服务

## 3. 用户界面组件

### 3.1 标签页导航
- 添加MCP
- 已连接MCP
- 聊天
- 测试Function Call
- 监控池状态
- Python MCP
- Git MCP

### 3.2 表单组件
- 输入框、文本区域
- 下拉选择框
- 按钮
- 文件上传

### 3.3 状态显示
- 提示消息(Toast)
- 状态指示器
- 加载状态

### 3.4 列表显示
- MCP服务列表
- 实例列表
- 聊天消息列表
- 函数调用信息

## 4. 功能详细说明

### 4.1 添加MCP服务
用户可以通过多种方式添加新的MCP服务：
- 从预设列表中选择常用服务
- 通过命令行格式快速配置
- 手动输入配置信息(名称、类型、命令、参数、环境变量)
- 直接粘贴或导入JSON配置

### 4.2 MCP服务管理
- 显示已连接服务的名称、类型和状态
- 支持重连和删除操作
- 显示服务提供的工具列表
- 允许调用服务的工具功能

### 4.3 聊天界面
- 支持与OpenAI进行对话
- 显示消息发送者和时间
- 展示函数调用过程和结果
- 支持清除聊天历史

### 4.4 Function Call测试
- 输入特定提示测试OpenAI函数调用
- 展示完整调用过程和结果
- 支持清除测试结果

### 4.5 池监控功能
- 显示实时池状态统计
- 列出所有实例详情(ID、名称、类型、会话数、状态、创建时间)
- 支持查看实例详情和删除操作
- 提供实例复用测试功能
- 支持清理空闲实例

### 4.6 Python MCP服务创建
- 配置Python包名、模块名和参数
- 选择Python和Pip命令
- 生成并显示配置预览
- 一键创建服务

### 4.7 Git MCP服务创建
- 配置Git仓库URL、Token和运行脚本
- 选择脚本类型和参数
- 生成并显示配置预览
- 一键创建服务

## 5. 技术实现

前端使用纯HTML、CSS和JavaScript实现，主要包含以下文件：
- index.html - 页面结构
- app.js - 主要功能逻辑
- pool-monitor.js - 实例池监控功能
- styles.css - 样式定义

使用WebSocket实时通信，与后端API交互获取数据和执行操作。

## 6. 用户体验

- 响应式设计适应不同设备
- 简洁明了的表单和列表布局
- 即时反馈的状态提示
- 分类清晰的标签页导航
- 直观的操作按钮和状态指示